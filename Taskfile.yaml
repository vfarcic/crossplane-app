version: '3'

tasks:

  # Package
  package-generate:
    desc: Generates package files.
    cmds:
      - for: ["backend"]
        cmd: rm -f package/{{ .ITEM }}.yaml && kcl kcl/{{ .ITEM }}.k --output package/{{ .ITEM }}.yaml
  package-apply:
    desc: Applies Compositions and Composite Resource Definition.
    cmds:
      - cmd: kubectl apply --filename package/definition.yaml && sleep 1
      - for: [
          "frontend.yaml",
          "backend.yaml"
        ]
        cmd: kubectl apply --filename package/{{ .ITEM }}
  package-publish:
    desc: Builds and pushes the package.
    deps:
      - package-generate
    cmds:
      - up login --token $UP_TOKEN
      - up xpkg build --package-root package --name application.xpkg
      - up xpkg push --package package/application.xpkg xpkg.upbound.io/$UP_ACCOUNT/dot-application:$VERSION
      - rm package/application.xpkg
      - yq --inplace ".spec.package = \"xpkg.upbound.io/devops-toolkit/dot-application:$VERSION\"" config.yaml

  # Test
  test:
    desc: Combines `./dot.nu setup`, `test-watch` (without the watcher), and `./dot.nu destroy` tasks.
    cmds:
      - ./dot.nu setup
      - task: test-watch
      - defer: ./dot.nu destroy
  test-watch:
    desc: Runs tests assuming that the cluster is already created and everything is installed.
    deps:
      - task: package-generate
    cmds:
      - task: package-apply
      - chainsaw test
    watch: true
    sources:
      - kcl/*.k
      - tests/**/*.yaml
      - package/frontend.yaml
    generates:
      - package/*.yaml
  test-once:
    desc: Runs tests once assuming that the cluster is already created and everything is installed.
    deps:
      - task: package-generate
    cmds:
      - task: package-apply
      - chainsaw test
