apiVersion: apiextensions.crossplane.io/v1
kind: Composition
metadata:
  name: app-backend-db-remote
  labels:
    type: backend-db
    location: remote
spec:
  compositeTypeRef:
    apiVersion: devopstoolkitseries.com/v1alpha1
    kind: App
  patchSets:
  - name: metadata
    patches:
    - fromFieldPath: metadata.labels
  resources:
  - name: deployment
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: Object
      spec:
        forProvider:
          manifest:
            apiVersion: apps/v1
            kind: Deployment
            metadata:
              name: # patched
              namespace: # patched
            spec:
              template:
                spec:
                  containers:
                  - name: backend
                    image: # patched
                    ports:
                    - containerPort: 80
                    livenessProbe:
                      httpGet:
                        path: /
                        port: 80
                    readinessProbe:
                      httpGet:
                        path: /
                        port: 80
                    resources:
                      limits:
                        cpu: 250m
                        memory: 256Mi
                      requests:
                        cpu: 125m
                        memory: 128Mi
                    env:
                    - name: DB_ENDPOINT
                      valueFrom:
                        secretKeyRef:
                          key: endpoint
                    - name: DB_PASSWORD
                      valueFrom:
                        secretKeyRef:
                          key: password
                    - name: DB_PORT
                      valueFrom:
                        secretKeyRef:
                          key: port
                          optional: true
                    - name: DB_USERNAME
                      valueFrom:
                        secretKeyRef:
                          key: username
                    - name: DB_NAME
                      value: # patched
    patches:
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: "%s-deployment"
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.manifest.metadata.name
    - fromFieldPath: spec.parameters.namespace
      toFieldPath: spec.forProvider.manifest.metadata.namespace
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.manifest.metadata.labels.app
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.manifest.spec.selector.matchLabels.app
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.manifest.spec.template.metadata.labels.app
    - fromFieldPath: spec.parameters.image
      toFieldPath: spec.forProvider.manifest.spec.template.spec.containers[0].image
    - fromFieldPath: spec.parameters.port
      toFieldPath: spec.forProvider.manifest.spec.template.spec.containers[0].ports[0].containerPort
    - fromFieldPath: spec.parameters.port
      toFieldPath: spec.forProvider.manifest.spec.template.spec.containers[0].livenessProbe.httpGet.port
    - fromFieldPath: spec.parameters.port
      toFieldPath: spec.forProvider.manifest.spec.template.spec.containers[0].readinessProbe.httpGet.port
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.manifest.spec.template.spec.containers[0].env[0].valueFrom.secretKeyRef.name
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.manifest.spec.template.spec.containers[0].env[1].valueFrom.secretKeyRef.name
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.manifest.spec.template.spec.containers[0].env[2].valueFrom.secretKeyRef.name
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.manifest.spec.template.spec.containers[0].env[3].valueFrom.secretKeyRef.name
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.manifest.spec.template.spec.containers[0].env[4].value
    - fromFieldPath: spec.parameters.kubernetesProviderConfigName
      toFieldPath: spec.providerConfigRef.name
    readinessChecks:
    - type: None
  - name: service
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: Object
      spec:
        forProvider:
          manifest:
            apiVersion: v1
            kind: Service
            metadata:
              name: # patched
              namespace: # patched
            spec:
              type: ClusterIP
              ports:
              - port: 80
                targetPort: 80
                protocol: TCP
                name: http
    patches:
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: "%s-service"
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.manifest.metadata.name
    - fromFieldPath: spec.parameters.namespace
      toFieldPath: spec.forProvider.manifest.metadata.namespace
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.manifest.metadata.labels.app
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.manifest.spec.selector.app
    - fromFieldPath: spec.parameters.port
      toFieldPath: spec.forProvider.manifest.spec.ports[0].port
    - fromFieldPath: spec.parameters.port
      toFieldPath: spec.forProvider.manifest.spec.ports[0].targetPort
    - fromFieldPath: spec.parameters.kubernetesProviderConfigName
      toFieldPath: spec.providerConfigRef.name
    readinessChecks:
    - type: None
  - name: ingress
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: Object
      spec:
        forProvider:
          manifest:
            apiVersion: networking.k8s.io/v1
            kind: Ingress
            metadata:
              name: # patched
              namespace: # patched
              annotations:
                ingress.kubernetes.io/ssl-redirect: "false"
            spec:
              rules:
              - http:
                  paths:
                  - path: /
                    pathType: ImplementationSpecific
                    backend:
                      service:
                        name: devops-toolkit
                        port:
                          number: 80
                host: devopstoolkitseries.com
    patches:
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: "%s-ingress"
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.manifest.metadata.name
    - fromFieldPath: spec.parameters.namespace
      toFieldPath: spec.forProvider.manifest.metadata.namespace
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.manifest.metadata.labels.app
    - fromFieldPath: spec.parameters.host
      toFieldPath: spec.forProvider.manifest.spec.rules[0].host
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.manifest.spec.rules[0].http.paths[0].backend.service.name
    - fromFieldPath: spec.parameters.port
      toFieldPath: spec.forProvider.manifest.spec.rules[0].http.paths[0].backend.service.port.number
    - fromFieldPath: spec.parameters.kubernetesProviderConfigName
      toFieldPath: spec.providerConfigRef.name
    - type: ToCompositeFieldPath
      fromFieldPath: spec.forProvider.manifest.spec.rules[0].host
      toFieldPath: status.host
  - name: secret
    base:
      apiVersion: kubernetes.crossplane.io/v1alpha1
      kind: Object
      spec:
        references:
        - patchesFrom:
            apiVersion: v1
            kind: Secret
            name: # patched
            namespace: # patched
            fieldPath: data.endpoint
          toFieldPath: data.endpoint
        - patchesFrom:
            apiVersion: v1
            kind: Secret
            name: # patched
            namespace: # patched
            fieldPath: data.password
          toFieldPath: data.password
        - patchesFrom:
            apiVersion: v1
            kind: Secret
            name: # patched
            namespace: # patched
            fieldPath: data.port
          toFieldPath: data.port
        - patchesFrom:
            apiVersion: v1
            kind: Secret
            name: # patched
            namespace: # patched
            fieldPath: data.username
          toFieldPath: data.username
        forProvider:
          manifest:
            apiVersion: v1
            kind: Secret
            metadata:
              name: # patched
              namespace: # patched
        providerConfigRef:
          name: # patched
    patches:
    - fromFieldPath: spec.id
      toFieldPath: metadata.name
      transforms:
      - type: string
        string:
          fmt: "%s-secret"
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.manifest.metadata.name
    - fromFieldPath: spec.parameters.namespace
      toFieldPath: spec.forProvider.manifest.metadata.namespace
    - fromFieldPath: spec.id
      toFieldPath: spec.forProvider.manifest.metadata.labels.app
    - fromFieldPath: spec.parameters.kubernetesProviderConfigName
      toFieldPath: spec.providerConfigRef.name
    - fromFieldPath: spec.parameters.dbSecret.name
      toFieldPath: spec.references[0].patchesFrom.name
    - fromFieldPath: spec.parameters.dbSecret.namespace
      toFieldPath: spec.references[0].patchesFrom.namespace
    - fromFieldPath: spec.parameters.dbSecret.name
      toFieldPath: spec.references[1].patchesFrom.name
    - fromFieldPath: spec.parameters.dbSecret.namespace
      toFieldPath: spec.references[1].patchesFrom.namespace
    - fromFieldPath: spec.parameters.dbSecret.name
      toFieldPath: spec.references[2].patchesFrom.name
    - fromFieldPath: spec.parameters.dbSecret.namespace
      toFieldPath: spec.references[2].patchesFrom.namespace
    - fromFieldPath: spec.parameters.dbSecret.name
      toFieldPath: spec.references[3].patchesFrom.name
    - fromFieldPath: spec.parameters.dbSecret.namespace
      toFieldPath: spec.references[3].patchesFrom.namespace
  