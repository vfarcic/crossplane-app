---
apiVersion: devopstoolkit.live/v1alpha1
kind: AppClaim
metadata:
  name: silly-demo-db
  namespace: ($namespace)
spec:
  compositionRef:
    name: app-backend
  compositionSelector:
    matchLabels:
      location: local
      type: backend
  id: backend-db
  parameters:
    host: silly-demo.54.204.223.4.nip.io
    image: ghcr.io/vfarcic/silly-demo
    tag: "1.4.113"
    kubernetesProviderConfigName: default
    namespace: production
    port: 8080
    db:
      secret: my-db
  resourceRef:
    apiVersion: devopstoolkit.live/v1alpha1
    kind: App
---
apiVersion: devopstoolkit.live/v1alpha1
kind: App
metadata:
  labels:
    crossplane.io/claim-name: silly-demo-db
    crossplane.io/claim-namespace: ($namespace)
spec:
  claimRef:
    apiVersion: devopstoolkit.live/v1alpha1
    kind: AppClaim
    name: silly-demo-db
    namespace: ($namespace)
  compositionRef:
    name: app-backend
  compositionSelector:
    matchLabels:
      location: local
      type: backend
  id: backend-db
  parameters:
    host: silly-demo.54.204.223.4.nip.io
    image: ghcr.io/vfarcic/silly-demo
    tag: "1.4.113"
    kubernetesProviderConfigName: default
    namespace: production
    port: 8080
    db:
      secret: my-db
  resourceRefs:
  - apiVersion: kubernetes.crossplane.io/v1alpha1
    kind: Object
    name: backend-db-deployment
  - apiVersion: kubernetes.crossplane.io/v1alpha1
    kind: Object
    name: backend-db-ingress
  - apiVersion: kubernetes.crossplane.io/v1alpha1
    kind: Object
    name: backend-db-service
  - apiVersion: kubernetes.crossplane.io/v1alpha1
    kind: ProviderConfig
    name: backend-db-app
---
apiVersion: kubernetes.crossplane.io/v1alpha1
kind: Object
metadata:
  annotations:
    crossplane.io/composition-resource-name: backend-db-deployment
    crossplane.io/external-name: backend-db-deployment
  labels:
    crossplane.io/claim-name: silly-demo-db
    crossplane.io/claim-namespace: ($namespace)
  name: backend-db-deployment
spec:
  forProvider:
    manifest:
      apiVersion: apps/v1
      kind: Deployment
      metadata:
        labels:
          app.kubernetes.io/name: backend-db
        name: backend-db
        namespace: production
      spec:
        selector:
          matchLabels:
            app.kubernetes.io/name: backend-db
        template:
          metadata:
            labels:
              app.kubernetes.io/name: backend-db
          spec:
            containers:
            - env:
              - name: DB_ENDPOINT
                valueFrom:
                  secretKeyRef:
                    key: endpoint
                    name: my-db
              - name: DB_PASSWORD
                valueFrom:
                  secretKeyRef:
                    key: password
                    name: my-db
              - name: DB_PORT
                valueFrom:
                  secretKeyRef:
                    key: port
                    name: my-db
                    optional: true
              - name: DB_USERNAME
                valueFrom:
                  secretKeyRef:
                    key: username
                    name: my-db
              - name: DB_NAME
                value: backend-db
              image: ghcr.io/vfarcic/silly-demo:1.4.113
              livenessProbe:
                httpGet:
                  path: /
                  port: 8080
              name: backend
              ports:
              - containerPort: 8080
              readinessProbe:
                httpGet:
                  path: /
                  port: 8080
              resources:
                limits:
                  cpu: 250m
                  memory: 256Mi
                requests:
                  cpu: 125m
                  memory: 128Mi
  providerConfigRef:
    name: backend-db-app
---
apiVersion: kubernetes.crossplane.io/v1alpha1
kind: Object
metadata:
  annotations:
    crossplane.io/composition-resource-name: backend-db-ingress
    crossplane.io/external-name: backend-db-ingress
  labels:
    crossplane.io/claim-name: silly-demo-db
    crossplane.io/claim-namespace: ($namespace)
  name: backend-db-ingress
spec:
  forProvider:
    manifest:
      apiVersion: networking.k8s.io/v1
      kind: Ingress
      metadata:
        annotations:
          ingress.kubernetes.io/ssl-redirect: "false"
        labels:
          app.kubernetes.io/name: backend-db
        name: backend-db
        namespace: production
      spec:
        rules:
        - host: silly-demo.54.204.223.4.nip.io
          http:
            paths:
            - backend:
                service:
                  name: backend-db
                  port:
                    number: 8080
              path: /
              pathType: ImplementationSpecific
  providerConfigRef:
    name: backend-db-app
---
apiVersion: kubernetes.crossplane.io/v1alpha1
kind: Object
metadata:
  annotations:
    crossplane.io/composition-resource-name: backend-db-service
    crossplane.io/external-name: backend-db-service
  labels:
    crossplane.io/claim-name: silly-demo-db
    crossplane.io/claim-namespace: ($namespace)
  name: backend-db-service
spec:
  forProvider:
    manifest:
      apiVersion: v1
      kind: Service
      metadata:
        labels:
          app.kubernetes.io/name: backend-db
        name: backend-db
        namespace: production
      spec:
        ports:
        - name: http
          port: 8080
          protocol: TCP
          targetPort: 8080
        selector:
          app.kubernetes.io/name: backend-db
        type: ClusterIP
  providerConfigRef:
    name: backend-db-app
