---
apiVersion: devopstoolkitseries.com/v1alpha1
kind: AppClaim
metadata:
  name: silly-demo
spec:
  parameters:
    repository:
      enabled: true
      name: my-repo
    ci:
      enabled: true
---
apiVersion: devopstoolkitseries.com/v1alpha1
kind: App
metadata:
  labels:
    crossplane.io/claim-name: silly-demo
    crossplane.io/claim-namespace: ($namespace)
spec:
  parameters:
    repository:
      enabled: true
      name: my-repo
    ci:
      enabled: true
  (resourceRefs[?name == 'backend-branch-ci']):
  - apiVersion: repo.github.upbound.io/v1alpha1
    kind: Branch
  (resourceRefs[?name == 'backend-file-gha']):
  - apiVersion: repo.github.upbound.io/v1alpha1
    kind: RepositoryFile
  (resourceRefs[?name == 'backend-file-dot-nu']):
  - apiVersion: repo.github.upbound.io/v1alpha1
    kind: RepositoryFile
  (resourceRefs[?name == 'backend-file-devbox']):
  - apiVersion: repo.github.upbound.io/v1alpha1
    kind: RepositoryFile
  (resourceRefs[?name == 'backend-file-dockerfile']):
  - apiVersion: repo.github.upbound.io/v1alpha1
    kind: RepositoryFile
  (resourceRefs[?name == 'backend']):
  - apiVersion: repo.github.upbound.io/v1alpha1
    kind: PullRequest
---
apiVersion: repo.github.upbound.io/v1alpha1
kind: Branch
metadata:
  annotations:
    crossplane.io/composition-resource-name: backend-branch-ci
  name: backend-branch-ci
spec:
  forProvider:
    branch: backend-ci
    repository: my-repo
---
apiVersion: repo.github.upbound.io/v1alpha1
kind: RepositoryFile
metadata:
  annotations:
    crossplane.io/composition-resource-name: backend-file-gha
  name: backend-file-gha
spec:
  forProvider:
    branch: backend-ci
    commitAuthor: Crossplane
    commitEmail: github-provider@crossplane.io
    commitMessage: .github/workflows/ci.yaml [skip ci]
    file: .github/workflows/ci.yaml
    overwriteOnCreate: true
    repository: my-repo
    content: |-
      name: ci
      run-name: ci
      on:
        push:
          branches:
            - main
      jobs:
        all:
          runs-on: ubuntu-latest
          env:
            TAG: 0.0.${{ github.run_number }}
            FORCE_COLOR: 1
          steps:
            - name: Checkout
              uses: actions/checkout@v4
            - name: Set up QEMU
              uses: docker/setup-qemu-action@v3
            - name: Login to ghcr
              uses: docker/login-action@v3
              with:
                registry: ghcr.io
                username: vfarcic
                password: ${{ secrets.REGISTRY_PASSWORD }}
            - name: Install devbox
              uses: jetify-com/devbox-install-action@v0.11.0
              with:
                project-path: devbox-ci.json
            - name: All
              run: |
                devbox run --config devbox-ci.json -- ./dot.nu run ci $TAG
              env:
                REGISTRY_PASSWORD: ${{ secrets.REGISTRY_PASSWORD }}
            - name: Commit changes
              run: |
                git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
                git config --local user.name "github-actions[bot]"
                git add .
                git commit -m "Release ${{ env.TAG }} [skip ci]"
            - name: Push changes
              uses: ad-m/github-push-action@master
              with:
                github_token: ${{ secrets.GITHUB_TOKEN }}
                branch: ${{ github.ref }}
---
apiVersion: repo.github.upbound.io/v1alpha1
kind: RepositoryFile
metadata:
  annotations:
    crossplane.io/composition-resource-name: backend-file-dot-nu
  name: backend-file-dot-nu
spec:
  forProvider:
    branch: backend-ci
    commitAuthor: Crossplane
    commitEmail: github-provider@crossplane.io
    commitMessage: dot.nu [skip ci]
    file: dot.nu
    overwriteOnCreate: true
    repository: my-repo
    content: |-
      #!/usr/bin/env nu
      
      def main [] {}

      # Runs all CI tasks
      def "main run ci" [
          tag: string # The tag of the image (e.g., 0.0.1)
          manifest = "apps/backend.yaml" # The path to the manifest file
          --run_tests = true # Whether to run tests
          --build_images = true # Whether to build images
      ] {
      
          if $run_tests {
              main run tests --language go
          }

          if $build_images {
              main build image $tag
          }

          main update claim $tag $manifest
      
      }

      # Runs tests
      def "main run tests" [
          --language = "go" # The language of the project (e.g., go)
      ] {

          if $language == "go" {
              go test -v $"(pwd)/..."
          }
      
      }

      # Builds and (optionally) pushes container images
      def "main build image" [
          tag: string   # The tag of the image (e.g., 0.0.1)
          --push = true # Whether to push the image to the registry
      ] {

          docker image build --tag $"ghcr.io/vfarcic/silly-demo:latest" .

          docker image tag $"ghcr.io/vfarcic/silly-demo:latest" $"ghcr.io/vfarcic/silly-demo:($tag)"

          if $push {

              docker image push $"ghcr.io/vfarcic/silly-demo:latest"

              docker image push $"ghcr.io/vfarcic/silly-demo:($tag)"
          }

      }

      # Updates the claim
      def "main update claim" [
          tag: string # The tag of the image (e.g., 0.0.1)
          path = "apps/backend.yaml" # The path to the claim file
      ] {
      
          open $path | upsert spec.parameters.tag $tag | save $path --force
      
      }
---
apiVersion: repo.github.upbound.io/v1alpha1
kind: RepositoryFile
metadata:
  annotations:
    crossplane.io/composition-resource-name: backend-file-devbox
  name: backend-file-devbox
spec:
  forProvider:
    branch: backend-ci
    commitAuthor: Crossplane
    commitEmail: github-provider@crossplane.io
    commitMessage: devbox-ci.json [skip ci]
    file: devbox-ci.json
    overwriteOnCreate: true
    repository: my-repo
    content: |-
      {
        "packages": [
          "nushell@0.100.0",
          "go@1.22.3"
        ],
        "shell": {
          "init_hook": [
            "chmod +x dot.nu"
          ],
          "scripts":   {}
        }
      }
---
apiVersion: repo.github.upbound.io/v1alpha1
kind: RepositoryFile
metadata:
  annotations:
    crossplane.io/composition-resource-name: backend-file-dockerfile
  name: backend-file-dockerfile
spec:
  forProvider:
    branch: backend-ci
    commitAuthor: Crossplane
    commitEmail: github-provider@crossplane.io
    commitMessage: Dockerfile [skip ci]
    file: Dockerfile
    overwriteOnCreate: true
    repository: my-repo
    content: |-
      FROM golang:1.23.3-alpine AS build
      RUN mkdir /src
      WORKDIR /src
      ADD ./go.mod .
      ADD ./go.sum .
      ADD ./*.go ./
      RUN GOOS=linux GOARCH=amd64 go build -o app
      RUN chmod +x app

      FROM scratch
      ARG VERSION
      ENV VERSION=$VERSION
      ENV DB_PORT=5432 DB_USERNAME=postgres DB_NAME=my-db
      COPY --from=build /src/app /usr/local/bin/app
      EXPOSE 8080
      CMD ["app"]
---
apiVersion: repo.github.upbound.io/v1alpha1
kind: PullRequest
metadata:
  name: backend
spec:
  forProvider:
    baseRef: main
    headRef: backend-ci
    body: Review, merge, enjoy.
    title: "CI"
    baseRepositorySelector:
      matchControllerRef: true